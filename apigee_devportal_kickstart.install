<?php

/**
 * @file
 * Copyright 2019 Google Inc.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

/**
 * @file
 * Install, update and uninstall functions for Apigee Kickstart profile.
 */

use Drupal\apigee_devportal_kickstart\Installer\Form\ApigeeEdgeConfigurationForm;
use Drupal\Core\Messenger\MessengerInterface;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function apigee_devportal_kickstart_install() {

  // Get profile path.
  $src_path = drupal_get_path('profile', 'apigee_devportal_kickstart') . '/resources/files';

  // Get public files directory.
  $dest_path = file_default_scheme() . '://';

  // Files to copy.
  // Not all files are copied. So we list them here individually.
  $filesets = [
    '' => [
      'aditya-vyas-1392552-unsplash.jpg',
      'chuttersnap-255216-unsplash.png',
      'donald-giannatti-671274-unsplash.jpg',
      'nasa-43567-unsplash.jpg',
      'nasa-43569-unsplash.jpg',
      'nasa-89116-unsplash.jpg',
      'spacex-1130896-unsplash.jpg',
      'spacex-81773-unsplash.jpg',
      'terence-burke-1417892-unsplash.jpg',
    ],
    'default_images/' => [
      'profile-default.jpg',
    ],
    'apidoc_specs/' => [
      'petstore.yaml',
    ],
  ];

  // Copy files in public files directory. Note: Managed files are not desired.
  foreach ($filesets as $destination => $files) {
    foreach ($files as $file) {
      if (file_exists($src_path . '/' . $file)) {
        // If the file exists in public://, it should be skipped, as these are
        // tied to media entities which hard-code the path/file.
        $directory = $dest_path . $destination;
        if (!empty($destination)) {
          file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
        }
        file_unmanaged_copy($src_path . '/' . $file, $directory . $file);
      }
    }
  }
}

/**
 * Implements hook_install_tasks_alter().
 */
function apigee_devportal_kickstart_install_tasks_alter(&$tasks, $install_state) {
  // Do not add the apigee_edge_configure_form tasks if non-interactive install
  // since drush si cannot set default values for the form.
  // Use `drush key-save apigee_edge_connection_default '{\"auth_type\":\"basic\",\"organization\":\"ORGANIZATION\",\"username\":\"USERNAME\",\"password\":\"PASSWORD"}' --key-type=apigee_auth -y`
  // to create a key after drush si.
  if (!$install_state['interactive']) {
    return;
  }

  // Add a task for configuring Apigee Edge Authentication.
  $tasks_copy = $tasks;
  $apigee_edge_configure_form = [
    'apigee_edge_configure_form' => [
      'display_name' => t('Configure Apigee Edge'),
      'type' => 'form',
      'function' => ApigeeEdgeConfigurationForm::class,
    ],
  ];

  // The task should run before install_configure_form which creates the user.
  $tasks = array_slice($tasks_copy, 0, array_search('install_configure_form', array_keys($tasks))) + $apigee_edge_configure_form + $tasks_copy;
}

/**
 * Implements hook_install_tasks().
 */
function apigee_devportal_kickstart_install_tasks(&$install_state) {
  $tasks = [
    '\Drupal\apigee_devportal_kickstart\Installer\Form\DemoInstallForm' => [
      'display_name' => t('Install demo content'),
      'type' => 'form',
    ],
    'apigee_devportal_kickstart_theme_setup' => [
      'display_name' => t('Install theme'),
      'display' => FALSE,
    ],
  ];
  return $tasks;
}

/**
 * Install the theme.
 *
 * @param array $install_state
 *   The install state.
 */
function apigee_devportal_kickstart_theme_setup(array &$install_state) {
  // Clear all status messages generated by modules installed in previous step.
  Drupal::messenger()->deleteByType(MessengerInterface::TYPE_STATUS);

  // Set apigee_kickstart as the default theme.
  \Drupal::configFactory()
    ->getEditable('system.theme')
    ->set('default', 'apigee_kickstart')
    ->save();

  // Ensure that the install profile's theme is used.
  // @see _drupal_maintenance_theme()
  \Drupal::service('theme.manager')->resetActiveTheme();

  // Enable the admin theme for editing content.
  \Drupal::configFactory()
    ->getEditable('node.settings')
    ->set('use_admin_theme', TRUE)
    ->save(TRUE);
}
